name: Package Executable

on:
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'

      - name: Pip Install
        run: python -m pip install --upgrade pip
        
      - name: Poetry Install
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true --local
          poetry install

      - name: Install Pyinstaller
        run: poetry add pyinstaller

      - name: Create Executable File (Windows)
        run: poetry run pyinstaller -F "main.py" --clean --dist ./out --name "CxKitty" --add-data ".venv\Lib\site-packages\onnxruntime\capi\onnxruntime_providers_shared.dll;onnxruntime\capi" --add-data ".venv\Lib\site-packages\ddddocr\common.onnx;ddddocr" --add-data ".venv\Lib\site-packages\ddddocr\common_det.onnx;ddddocr" --add-data ".venv\Lib\site-packages\ddddocr\common_old.onnx;ddddocr" || true

      - name: Copy Required Files
        run: |
          cp config.yml out/
          cp pyproject.toml out/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: CxKitty For Windows x64
          path: |
            out

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'

      - name: Pip Install
        run: python -m pip install --upgrade pip
        
      - name: Poetry Install
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true --local
          poetry install

      - name: Install Pyinstaller
        run: poetry add pyinstaller

      - name: Create Executable File (Linux)
        run: poetry run pyinstaller -F "main.py" --clean --dist ./out --name "CxKitty" --add-data ".venv/lib/python3.10/site-packages/onnxruntime/capi/libonnxruntime_providers_shared.so:onnxruntime\capi" --add-data ".venv/lib/python3.10/site-packages/ddddocr/common.onnx:ddddocr" --add-data ".venv/lib/python3.10/site-packages/ddddocr/common_det.onnx:ddddocr" --add-data ".venv/lib/python3.10/site-packages/ddddocr/common_old.onnx:ddddocr" || true

      - name: Copy Required Files
        run: |
          cp config.yml out/
          cp pyproject.toml out/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: CxKitty For Linux x64
          path: |
            out

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          architecture: 'x64'
          cache: 'pip'

      - name: Pip Install
        run: python -m pip install --upgrade pip
        
      - name: Poetry Install
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true --local
          poetry install

      - name: Install Pyinstaller
        run: poetry add pyinstaller

      - name: Create Executable File (macOS)
        run: poetry run pyinstaller -F "main.py" --clean --dist ./out --name "CxKitty" --add-data ".venv/lib/python3.10/site-packages/ddddocr/common.onnx:ddddocr" --add-data ".venv/lib/python3.10/site-packages/ddddocr/common_det.onnx:ddddocr" --add-data ".venv/lib/python3.10/site-packages/ddddocr/common_old.onnx:ddddocr" || true

      - name: Copy Required Files
        run: |
          cp config.yml out/
          cp pyproject.toml out/

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: CxKitty For macOS x64
          path: |
            out
